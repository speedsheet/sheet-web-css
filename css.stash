# <#>CSS<> SpeedSheet
<b>Find it faster.<>



# CSS Basics



### Case

Case Sensitive



### Comments

<cb><#>/* Multilne comment. */<><>



### Format

<cb><v>selector<> {
	<v>attribute<>: <v>value<>;
}<>



### Names

<s>[<>  a-z A-Z _ -  <s>]    [<>  a-z A-Z 0-9 _ -  <s>]  *<>

Alphas, numbers, underscores and dashes.
Must not start with a number.


Examples:

<c><v>name-1<><>

<c><v>name-two<><>
@
@ Identifier



### Conventions - Naming

<c><v>dash-separated-name<><>

Lower case, dash separated words.
Dashes (-) separate css names from JavaScript names.

Note: javascript names use underscores ('_').



### CSS Element

<cb><v>element-name<><>

Example:

<cb>body {
	<v>...<>
}<>

<cb>html {
	<v>...<>
}<>
@
@ Name



### Selector Precedence

Highest to Lowest:

1. Inline <b>style=""<> before <b>\<style><> or CSS File.
2. Current <b>@media<> type.
3. <b>!important<>
4. More specific before less specific.
5. Later rules override earlier rules.
6. <b>#id<> before <b>.class<> before <b>element<> selector.



#### String

<cb>"<v>A String<>"<>

<cb>'<v>A String<>'<>


Single or double quotes is fine.



#### String - Escape Character

Escape Syntax		<!>?<>


Backslash			<!>?<>
Quote / Single			<!>?<>
Quote / Double		<!>?<>



Example:

<cb>"<v>A two line<> <!>??<> <v>string.<>"<>

<cb>"<v>A word in <> <!>??<> <v>quotes<> <!>??<> <v>.<>"<>



#### Inline Before Section or File

<cb><#>\<!-- Lower Precedence --><>

\<link rel="stylesheet" href="css_file_name">

\<style>
	p {font-size: 12px;}
\</style>


<#>\<!-- Higher Precedence --><>

\<div style="font-size: 14px;"><v>...<><>



#### Media Type

The current media type overrides all other media types.



#### !important

<cb><v>property<>: <v>value<> !important;<>

<c>!important<> supercedes all other settings.



#### More Specific Before Less Specific

<cb><#>/* Less Specific (Lower Precedence) */<>

p {
	font-size: 12px
}

<#>/* More Specific (higher Precedence) */<>

p.<v>class-name<> {
	font-size: 14px
}<>



#### Later Rules Override Earlier Rules

<cb><#>/* Earlier (Will Be Overridden) */<>

p {
	font-size: 12px
}

<#>/* Later (Takes Precedence) */<>
p {
	font-size: 14px
}<>



#### Id Before Class Before Element Selector

<cb><#>/* Element - Lowest Precedence */<>

p {
	font-size: 12px
}

<#>/* Class - Higher Precedence */<>

.<v>class-name<> {
	font-size: 14px
}

<#>/* Id - Highest Precedence */<>

\#<v>id-name<> {
	font-size: 16px
}<>
@
@ id, class name, element selector



### Terminator

<cb>;<>


Separates css attributes.


Example:

<cb>body {
	background: silver;
	padding: 20px;
}<>

<cb>\<body style="background: silver; padding: 20px;"><v>...<><>


### Border / Margin / Padding

top right bottom left
Margin ( Border ( Padding ) )


# Symbol Lookup

<c><#>/* Comment... */<><>	Multiline Comment

<c><v>element<><> 				Element Selector (No Leading '<c>.<>' or '<c>#<>')

<c>.<v>class-name<><> 			Class (Starts with '.')
<c>#<v>id-1<><> 				Element Id (Starts With '#')



# CSS In HTML



### Html - CSS Inline

<cb>\<<v>...<> style=“<v>css attributes...<>”><v>...<><>


Inline Styling set at the element.


Example:

<cb>\<div style="<v>text-align:left;<>"><v>...<><>
@
@ Style, Styling, Element
@ style=""



### Html - CSS Section

<cb>\<style>
	<v>css...<>
\</style><>


Example:

<cb>\<style>
	body {
		margin: 20px;
	}
\</style><>
@
@ Style, Styling
@ \<style>




### Html - CSS File

<cb>\<link rel="stylesheet" href="<v>css_file_name<>"><>


Applies the styling from the file.


Example:

<cb>\<head>
	\<link rel="stylesheet" href="<v>main.css<>">
\</head><>
@
@ Include, Import from, Style, Styling, head, header
@ \<link>, rel="", href=""



# CSS - Import From Other File

<cb>@import url(<v>css_file_name<>);<>


Incorporates styles from another css file into this one.
@
@ Include, Import
@ \@import, url()



# Selectors



### Selector - Summary

CSS Element	<c><v>element-1<><>
CSS Class	<c>.<v>class-1<><>
CSS ID		<c>#<v>id-1<><>


Element With Class:

<cb><#>/* Element who's class is class-1 */<>

<v>element1<>.<v>class-1<> {<v>...<><>


Element With ID:

<cb><#>/* Element who's id is ids1 */<>

<v>element1<>#<v>id-1<> {<v>...<><>


Element Under Element:

<cb><#>/* element-2 is a descendant of element-1 */<>

<v>element-1<> <v>element-2<> {<v>...<> 		<#>/* Style applied to element-2 */<><>


### Selector - Separator

<cb>,<>

<cb><v>selector1<>, <v>selector2<> {
	<v>...<>
}<>

Separates selectors sharing the same attributes.


Example:

<cb>.<v>box<>, <v>div<> {
	<v>...<>
}<>


### Selector - Any

<cb>*<>

<!>What is this?
How does it work?
Examples!<>



### Selector - Class

<cb>.<v>class-name<> {
	<v>...<>
}<>


Matches:

<cb>\<p class="<v>class-name<>"><v>...<>\</p><>


Identifies a style for a group of related elements.



### Selector - Element

<cb><v>element1<> {
	<v>...<>
}<>


Matches:

<cb>\<<v>element1<>><v>...<>\</<v>element1<>><>


Identifies an element type.


Example:

<cb>div {
	margin: 0;
}<>



### Selector - ID

<cb>#<v>id-name<> {
	<v>...<>
}<>

Matches:

<cb>\<p id="<v>id-name<>"><v>...<>\</p><>


Identifies a single unique element.
	


### Selector - Element Type with Class

<cb><v>element<>.<v>class-1<> {
	<v>...<>
}<>

	<elementType class="className">…</p>

	Only elementType will have the style applied to it. All other element types will be ignored.

Element Type with ID	elementType#idName {
		attributes
	}

	<elementType="idName">...</elementType>
	
	Only elementType will have the style applied to it. All other element types will be ignored.

Element Type ex:	<... id="idName">
			No Styling Here.

			<elementType id="idName">
				Styling Applied Here.
			</elementType>

		</...>



### Selector - After

<cb><v>selector<>::after {
	<v>...<>
}<>


Insert something after the content.
@
@ ::after



### Selector - Before

<cb><v>selector<>::before {
	<v>...<>
}<>


Insert something before the content.
@
@ ::before



### Selector - Children - All Descendants

All:

<cb><v>parent-selector<> * {
	<v>...<>
}<>

Subset:

<cb><v>parent-selector<> <v>child-selector<> {
	<v>...<>
}<>

Applies to all <c><v>child-selector<><> children inside <c><v>parent-selector<><>.
@
@ *, parent



### Selector - Children - Direct Descendants

All:

<cb><v>parent-selector<> > <v>child-selector<> {
	<v>...<>
}<>

Subset:

<cb><v>parent-selector<> > <v>child-selector<> {
	<v>...<>
}<>


Select the child with the given selector when directly under a parent of the given parent selector.


Applies to direct <c><v>child-selector<><> children inside <c><v>parent-selector<><> only.


Class Within Class:

<cb>.<v>parent<> > .<v>child<> {
	<v>...<>
}<>
@
@ >, *, parent



### Selector - Input

<cb>input[type="button"]
input[type="checkbox"]
input[type="color"]
input[type="date"]
input[type="datetime-local"]
input[type="email"]
input[type="file"]
input[type="hidden"]
input[type="image"]
input[type="month"]
input[type="number"]
input[type="password"]
input[type="radio"]
input[type="range"]
input[type="reset"]
input[type="search"]
input[type="submit"]
input[type="tel"]
input[type="text"]
input[type="time"]
input[type="url"]
input[type="week"]<>

Attribute Type Not Present:

<cb>input:not([type])<>

Attribute Type Is Empty:

<cb>input:[type=""]<>
@
@ input type =, box
@ button, checkbox, color, date, datetime-local, email, file, hidden, image, month, number, password, radio, range, reset, search, submit, tel, text, time, url, week
@ @ input[type="button"], input[type="checkbox"], input[type="color"], input[type="date"], input[type="datetime-local"], input[type="email"], input[type="file"], input[type="hidden"], input[type="image"], input[type="month"], input[type="number"], input[type="password"], input[type="radio"], input[type="range"], input[type="reset"], input[type="search"], input[type="submit"], input[type="tel"], input[type="text"], input[type="time"], input[type="url"], input[type="week"]


### Selector - Placeholder

<cb><v>Element<>::placeholder {
	<v>...<>
}<>


Defines the css properties for the placeholder attribute.
@
@ foreground, color, textarea
@ :placeholder, ::placeholder



## Pseudo Classes


### Selector - First Child

<cb>:first-child {
	<v>...<>
}<>
@
@ 1st, :first-child, first-child



### Selector - Nth Child

<cb>:nth-child(<v>n<>) {
	<v>...<>
}<>

The nth element of a type.

The first element is 1 (not 0).
@
@ :nth-child, nth-child, nth child



### Selector - Nth Child - Repeating

<cb>:nth-child(<v>2<>n) {
	<v>...<>
}<>

Every nth element of a type, repeating.

The first element is 1 (not 0).


Every 2nd Child:

<cb><v>selector<>:nth-child(<v>2<>n) {
	<v>...<>
}<>

Every 4th Child, Starting at 6 (6, 10, 14 ...):

<cb><v>selector<>:nth-child(<v>4<>n + 2) {
	<v>...<>
}<>
@
@ :nth-child, nth-child, nth child, even, repeating, n, 2n, 3n, 4n, every other



### Selector - Last Child

<cb>:last-child {
	<v>...<>
}<>
@
@ :last-child, last-child



### Selector - First Line

<cb>:first-line {
	<v>...<>
}<>
@
@ 1st, :first-line, first-line



### Selector - Last Line

<cb>:last-line {
	<v>...<>
}<>
@
@ :last-line, last-line



### Selector - All But

<cb><v>selector<>:not(<v>excluded-selector<>) {
	<v>...<>
}<>

Includes all matches but the excluded selector type.


All But 1st Child:

<cb><v>selector<>:not(first-child) {
	<v>...<>
}<>
@
@ except, excluding, includes, including
@ not, :not



### Selector - First of Selector

<cb><v>selector<>:first-of-type {
	<v>...<>
}<>


Example:

<cb><v>div<>:first-of-type {
	<v>...<>
}<>

<cb>.<v>sidebar<>:first-of-type {
	<v>...<>
}<>
@
@ 1st, :first-of-type, first-of-type, of-type, of type



### Selector - Last of Selector

<cb><v>selector<>:last-of-type {
	<v>...<>
}<>


Example:

<cb><v>div<>:last-of-type {
	<v>...<>
}<>

<cb>.<v>sidebar<>:last-of-type {
	<v>...<>
}<>
@
@ :last-of-type, last-of-type, of-type, of type



### Selector - Only of Selector

<cb><v>selector<>:first-of-type {
	<v>...<>
}<>


Example:

<cb><v>div<>:first-of-type {
	<v>...<>
}<>

<cb>.<v>sidebar<>:first-of-type {
	<v>...<>
}<>
@
@ :only-of-type, only-of-type, of-type, of type



### Selector - Link

<cb>:link {
	<v>...<>
}<>

Styles the <c>\<a><> element.
@
@ :link
@ \<a>, href, url



### Selector - Link, Visited

<cb>:visited {
	<v>...<>
}<>

Styles the <c>\<a><> element when the link has been visited.
@
@ :visited
@ \<a>, href, url



### Selector - Active

<cb>:active {
	<v>...<>
}<>

Styles an element when it is being clicked.
@
@ :active
@ \<a>, href, url, clicked



### Selector - Focus

<cb>:focus {
	<v>...<>
}<>

Styles an element when it has focus.
@
@ :focus
@ \<a>, href, url, current



### Selector - Hover

<cb>:hover {
	<v>...<>
}<>

Sthyles an element when the mouse hovers over it.
@
@ :hover
@ \<a>, href, url



# CSS Custom Properties
@
@ Variables



### Custom Property - Get

<cb><v>...<> {
	<v>property<>: var(--<v>variable-name-1<>);
}<>

Sets <c><v>property<><> to the value of <c>--<v>variable-name-1<><>.
@
@ read, retrieve



### Custom Property - Set

<cb>:root {
	--<v>variable-name-1<>: <v>value<>;
}<>

Sets the value of the custom property / variable.
Requires <c>--<> before the variable name.
@
@ Create, New, :root



### Custom Property - Update

<cb><v>selector<> {
	--<v>variable-name-1<>: <v>new_value<>;
}<>

Updates the value of the custom property / variable.

The new variable value will only apply to items matching the selector.
@
@ Create, New, :root



# Transitions
@
@ animations
@ trans-only, transition-only, transitions-only
@ transition:



### Transitions Basics

<cb><v>...<> {
	<v>property<>: <v>value<>;
	transition: <v>property<> <v>duration<>s;
}<>


Transitions the change to <v>property<>'s new value in <v>duration<> seconds.


Example:

<cb>div:hover {
	<v>background<>: LightSkyBlue;
	transition: <v>background<> <v>0.5<>s;
}<>



# Override / Force

<cb>!important<>


Forces this attribute setting to override any others even if they would normally have higher precedence.


Example:

<cb>div {
	width: 100% !important;
}<>
@
@ Important, !important, !



# Background
@
@ background-only, backgrounds-only, backgrounds
@ colors-only, colours-only



### Background - Background Color

<cb>background-color: <v>colour-unit<>;<>
@
@ background-color:



### Background - Image

<cb>background-image: url(<v>image_path<>);<>
@
@ background-image:, url()



### Background - Image Position

<cb>background-position: <v>position-type<>;<>

<c><v>position-type<><>  <s>-<>  left | right | bottom | top | percentage | length
@
@ background-position:
@ left, right, bottom, top, percentage, length



### Background - Image Repeat

<cb>background-repeat: <v>repeat-type<>;<>


<c><v>repeat-type<><>  <s>-<>  no-repeat | repeat | repeat-x | repeat-y
@
@ background-repeat:



### Background - Image Scroll Attachment

<cb>background-attachment: <v>attachment-type<>;<>


	Types	fixed						// Image stays fixed while the page scrolls.
		scroll						// Image scrolls wit the page.
@
@ background-attachment:



# Blocks



### Block - clear

<cb>clear: <v>clear-type<><>

<c><v>clear-type<><>  <s>-<>  <v>left<>  <s>|<>  <v>right<>  <s>|<>  <v>both<>  <s>|<>  <v>none<>
@
@ clear:
@ left, right, both, none



### Block - display

<cb>display: <v>display-type<><>

<c><v>display-type<><>  <s>-<>  none | block | inline | list-item | run-in | compact ...

	none - Do Not Display
	block - Display With Line Breaks Before And After
	inline - Display With No Line Breaks
	inline-block - Displays as Inline-level block (can set height, width). No line-break after element.


Sets how an item should be displayed.. hidden, with line breaks or inline.
@
@ display:
@ none, block, inline, list-item, run-in, compact



### Block - float

<cb>float: <v>float-type<>;<>


<c><v>float-type<><>  <s>-<>  <v>left<>  <s>|<>  <v>right<>  <s>|<>  <v>none<>


Used primarily for images and layouts.
Float left or right only.
@
@ float:
@ left, right, none



### Block - Overflow

<cb>overflow: <v>overflow-type<>;<>

	<c>visible<>		Show All / Not Clipped <#>(default)<>
	<c>hidden<>		Overflow Hidden
	<c>scroll<>		Overflow Clipped, Scroll Bars Added
	<c>auto<>		Overflow Clipped, Scroll Bars When Needed
@
@ overflow
@ overflow:
@ visible, hidden, scroll, auto



### Block - Overflow - Scroll X (overflow-x)

<cb>overflow-x: <v>overflow-type<>;<>


<c><v>overflow-type<><>  <s>-<>  <v>scroll<>  <s>|<>  <v>hidden<>  <s>|<>  <v>auto<>

	<c>visible<>		Show All / Not Clipped <#>(default)<>
	<c>hidden<>		Overflow Hidden
	<c>scroll<>		Overflow Clipped, Scroll Bars Added
	<c>auto<>		Overflow Clipped, Scroll Bars When Needed

<!>Fix this. This covers all parts of overflow, not just scrolling. Maybe move scroll settings into own section.<>

Works on block elements only.
<!>? Must have a specified width?<>
@
@ overflow
@ overflow-x:
@ visible, hidden, scroll, auto



### Block - Overflow - Scroll Y (overflow-y)

<cb>overflow-y: <v>overflow-type<>;<>


<c><v>overflow-type<><>  <s>-<>  <v>scroll<>  <s>|<>  <v>hidden<>  <s>|<>  <v>auto<>

	<c>visible<>		Show All / Not Clipped <#>(default)<>
	<c>hidden<>		Overflow Hidden
	<c>scroll<>		Overflow Clipped, Scroll Bars Added
	<c>auto<>		Overflow Clipped, Scroll Bars When Needed

<!>Fix this. This covers all parts of overflow, not just scrolling. Maybe move scroll settings into own section.<>

Works on block elements only.
Must have a specified height.
@
@ overflow
@ overflow-y:
@ visible, hidden, scroll, auto



# Box Styling
@
@ Box Model



## Overview

<card>Margin [ Border [ Padding [] ] ]<>
	
<table><col>Margin<><col>Outside Border
Transparent<>
<col> <>
<col>Border<><col>Between Margin and Padding<>
<col> <>
<col>Padding<><col>White space between border and content.
Background Color<>
<col> <>
<col>Parameter Order<><col>Top Right Bottom Left<><>

Note: Margins do not apply inside tables. TR, TH, TD will not be affected.

<image "Box Model.png">



## Border
@
@ border-only, borders, borders-only


### Border - Set All

<cb>border: <v>border-width<> <v>border-style<> <v>border-color<>;<>


Example:

<cb>border: 2px solid red;<>
@
@ border:



### Border - Border Collapse

<cb>border-collapse: <v>collapse-type<>;<>

<c><v>collapse-type<><>  <s>-<>  <c>collapse<>  <s>|<>  <c>separate<>  <s>|<>  <c>inherit<>


Sets whether table element borders are separated (detached) or collapsed into one single border.
separated is the default.
@
@ border-collapse:
@ collapse, separate, inherit


### Border - Border Color

<cb>border-color: <v>color<><>
@
@ colour
@ border-color:



### Border - Border Style

<cb>border-style: <v>style<><>

<c><v>style<><>  <s>-<>  <c>none<>  <s>|<>  <c>hidden<>  <s>|<>  <c>dotted<>  <s>|<>  <c>dashed<>  <s>|<>  <c>solid<>  <s>|<>  <c>double<>  <s>|<>  <c>groove<>  <s>|<>  <c>ridge<>  <s>|<>  <c>inset<>  <s>|<>  <c>outset<>
@
@ border-style:
@ none, hidden, dotted, dashed, solid, double, groove, ridge, inset, outset



### Border - Border Width

<cb>border-width: <v>width<><>
@
@ border-width:



### Border - Hide

<cb>border: none;<>
@
@ border:
@ none, invisible



### Border - Rounding

<cb>border-radius: <v>radius<><>

<cb>border-radius: <v>top_left<> <v>top_right<> <v>bottom_right<> <v>bottom_left<><>


<c><v>radius<><>  <s>-<>  Width of the radius.
@
@ radius, rounded, corners
@ border-radius:



## Box Shadow

<!>Incomplete.<>

<cb>box-shadow: <v>shadow-type<> <!>Missing_Parameters_Here<>;<>


<c><v>shadow-type<><>  <s>-<>   <c>horizontal-offset<>  <s>|<>  <c>vertical-offset<>  <s>|<>  <c>blur<>  <s>|<>  <c>blurWidth<>  <s>|<>  <c>color<>


Examples:

<cb>box-shadow: none;<>

<cb>box-shadow: 2px 2px 5px 3px 5px #C0C0C0;<>
@
@ box shadows
@ box-shadow:



## Margin
@
@ margins
@ margin-only, margins-only



### Margin - Set All

<cb>margin: <v>size<>;<>

<cb>margin: <v>top-bottom<> <v>left-right<>;<>

<cb>margin: <v>top<> <v>left-right<> <v>bottom<>;<>

<cb>margin: <v>top<> <v>right<> <v>bottom<> <v>left<>;<>

<cb>margin: auto;<>

Margins are outside the element (outside the border).

<!>What does <c>auto<> do?<>


Example:

<cb>p {
	margin: 16px;
}<>

<cb>p {
	margin: 16px 0 16px 0;
}<>
@
@ margin:
@ auto



### Margin - Set Top

<cb>margin-top: <v>size<>;<>
@
@ margin-top:



### Margin - Set Bottom

<cb>margin-bottom: <v>size<>;<>
@
@ margin-bottom:


### Margin - Set Left

<cb>margin-left: <v>size<>;<>
@
@ margin-left:



### Margin - Set Right

<cb>margin-right: <v>size<>;<>
@
@ margin-right:



## Padding
@
@ padding-only



### Padding - Set All

<cb>padding: <v>size<>;<>

<cb>padding: <v>top-bottom<> <v>right-left<>;<>

<cb>padding: <v>top<> <v>right-left<> <v>bottom<>;<>

<cb>padding: <v>top<> <v>right<> <v>bottom<> <v>left<>;<>

<cb>padding: auto;<>

Padding is inside the element (inside the border).


Example:

<cb>p {
	padding: 16px;
}<>

<cb>p {
	padding: 16px 0 16px 0;
}<>
@
@ padding:



### Padding - Set Top

<cb>padding-top: <v>size<>;<>
@
@ padding-top:



### Padding - Set Bottom

<cb>padding-bottom: <v>size<>;<>
@
@ padding-bottom:



### Padding - Set Left

<cb>padding-left: <v>size<>;<>
@
@ padding-left:



### Padding - Set Right

<cb>padding-right: <v>size<>;<>
@
@ padding-right:



## Outline

<cb>outline: <v>settings<>;<>

Examples:

<cb>outline: none;<>
@
@ none, focus, active, selected
@ outline:


## Sizing
@
@ sizes, dimensions



### Box Sizing

<cb>box-sizing: <v>value<><>


Values:

<in>border-box
content-box<>


border-box		Include padding, border in element's total width / height
content-box		Exclude padding, border from the element's total width / height

Default: content-box


MDN Docs: <l https://developer.mozilla.org/en-US/docs/Web/CSS/box-sizing>box-sizing<>
@
@ width, height, dimensions, total, sizing
@ box-size-only, box-sizing-only, box-size



### Element - Height

<cb>height: <v>size<>;<>


Sets the height of the element.

Does not include margins, borders or padding.
@
@ height:



### Element - Height - Min Height

<cb>min-height: <v>size<>;<>


Defines the minimum heigh of this element.
@
@ Minimum, height-min, min-height
@ min-height:



### Element - Height - Max Height

<cb>max-height: <v>size<>;<>


Defines the maximum heigh of this element.
@
@ maximum, height-max, max-height
@ max-height:



### Element - Height - Actual Height

<cb>actual height = <v>height value<> + padding + border<>


height value = value provided by css.

Changed by <c>box-sizing<>.



### Element - Width

<cb>width: <v>size<>;<>


Sets the width of the element.

Does not include margins, borders or padding.
@
@ width:



### Element - Width - Min Width

<cb>min-width: <v>size<>;<>


Defines the minimum width of this element.
@
@ Minimum, width-min, min-width
@ min-width:


### Element - Width - Max Width

<cb>max-width: <v>size<>;<>


Defines the maximum width of this element.
@
@ maximum, width-max, max-width
@ max-width:



### Element - Width - Actual Width

<cb>actual width = <v>width value<> + padding + border<>


width value = value provided by css.

Changed by <c>box-sizing<>.



### Element - Set Sizing To Sizing At Border

<cb>box-sizing: border-box;<>


Normally height and width do not include padding and border sizes.
The end size can be bigger than expected.
Setting <c>border-box<> forces the dimensions to be calculated at the border size.
Padding and content are determined from there.


Example:

<cb>*, ::after, ::before {
	box-sizing: border-box;
}<>
@
@ box-sizing:




# Colors
@
@ Colours
@ colors-only, colours-only



### Color - Units - Hex

<cb>#<v>FFF<><>

<cb>#<v>FFFFFF<><>


Defines RGB colors using hex values.


Full Color List:
<l>https://en.wikipedia.org/wiki/Web_colors<>
@
@ #



### Color - Units - HSL / HSLA

<cb>hsl(<v>hue<>, <v>saturation<>%, <v>lightness<>%)<>

<cb>hsla(<v>hue<>, <v>saturation<>%, <v>lightness<>%)<>


<c><v>hue<><>				0 - 360
<c><v>saturation<><>		0% - 100%
<c><v>lightness<><>		0% - 100%		Black (0%) - Color (50%) - White (100%)
<c><v>alpha<><>			0.0 - 1.0			Transparant (0) - Opaque (1)


Example:

<cb>button {
	<#>/* Navy Blue */<>
	background: hsla(240, 100%, 25%, 0.75);
}<>
@
@ hls, hlsa
@ hsl(), hsla()



### Color - Units - RGB / RGBA

<cb>rgb(<v>red<>, <v>green<>, <v>blue<>)<>

<cb>rgba(<v>red<>, <v>green<>, <v>blue<>, <v>alpha<>)<>


<c><v>red<><>				0 - 255
<c><v>green<><>			0 - 255
<c><v>blue<><>			0 - 255
<c><v>alpha<><>			0.0 - 1.0		Transparant (0) - Opaque (1)


Example:

<cb>button {
	background: rgba(255, 255, 255, 0.5);
}<>
@
@ rgb(), rgba()



### Color - Units - RGB / RGBA %

<cb>rgb(<v>red<>%, <v>green<>%, <v>blue<>%)<>

<cb>rgba(<v>red<>%, <v>green<>%, <v>blue<>%, <v>alpha<>%)<>


Value Range:	<c>0% - 100%<>


Example:

<cb>.translucent-red {
	background: rgba(100%, 0%, 0%, 50%);
}<>
@
@ rgb(), rgba()



### Colors - Foreground

<cb>color: <v>color-unit<>;<>
@
@ main, front
@ color:



### Colors - Background

<cb>background <v>color-unit<>;<>

<cb>background-color <v>color-unit<>;<>
@
@ background-color:, background:



# Attributes


### Attributes - Add Text (content)

<cb>content: '<v>content text<>';<>

<cb><v>selector<> {
	content: '<v>content text<>';
}<>


Example:

<cb>span::before {
	content: "Span Here:"
}

\<span><v>Some Text<>\</span><>



# Cursors


### Cursor - Types

<cb>cursor: <v>cursor-type<>;<>


<c><v>cursor-type<><>  <s>-<>	crosshair		<s>|<>
				default		<s>|<>
				help			<s>|<>
				move		<s>|<>
				text			<s>|<>
				pointer		<s>|<>
				progress		<s>|<>
				wait			<s>|<>

				n-resize		<s>|<>
				ne-resize		<s>|<>
				e-resize		<s>|<>
				se-resize		<s>|<>
				s-resize		<s>|<>
				sw-resize		<s>|<>
				w-resize		<s>|<>
				nw-resize



### Cursors

From W3 Schools:
<l>https://www.w3schools.com/cssref/pr_class_cursor.asp<>

.alias {cursor: alias;}
.all-scroll {cursor: all-scroll;}
.auto {cursor: auto;}
.cell {cursor: cell;}
.context-menu {cursor: context-menu;}
.col-resize {cursor: col-resize;}
.copy {cursor: copy;}
.crosshair {cursor: crosshair;}
.default {cursor: default;}
.e-resize {cursor: e-resize;}
.ew-resize {cursor: ew-resize;}
.grab {cursor: grab;}
.grabbing {cursor: grabbing;}
.help {cursor: help;}
.move {cursor: move;}
.n-resize {cursor: n-resize;}
.ne-resize {cursor: ne-resize;}
.nesw-resize {cursor: nesw-resize;}
.ns-resize {cursor: ns-resize;}
.nw-resize {cursor: nw-resize;}
.nwse-resize {cursor: nwse-resize;}
.no-drop {cursor: no-drop;}
.none {cursor: none;}
.not-allowed {cursor: not-allowed;}
.pointer {cursor: pointer;}
.progress {cursor: progress;}
.row-resize {cursor: row-resize;}
.s-resize {cursor: s-resize;}
.se-resize {cursor: se-resize;}
.sw-resize {cursor: sw-resize;}
.text {cursor: text;}
.url {cursor: url(myBall.cur),auto;}
.w-resize {cursor: w-resize;}
.wait {cursor: wait;}
.zoom-in {cursor: zoom-in;}
.zoom-out {cursor: zoom-out;}



# Size
@
@ dimensions, length


### Size - Units

<c><v>_<>%<>		Percent						<#>20%<>
<c><v>_<>in<>		inch							<#>5in<>
<c><v>_<>cm<>		centimeter					<#>5cm<>
<c><v>_<>mm<>		millimeter						<#>5mm<>
<c><v>_<>pt<>		Point

		<c>1pt<> = 1/72 inch
		<c>72pt<> = 1 inch

<c><v>_<>pc<>		1pc = 12 pt
<c><v>_<>px<>		pixels.
@
@ points, pt, pixels, px, percent, inches, mm, millimeters



### Size - Relative Units

<c><v>_<>em<>		Relative to Parent Font Size		<#>3.0em<>
			<c>1em<> = Parent Font Size

<c><v>_<>ex<>		Relative to Parent Font Height	<#>1.5ex<>
			<c>1ex<> = ½ Font Size (?)

<c><v>_<>rem<>	Relative to Root Font Size		<#>3.0rem<>
			<c>1em<> = Root Font Size



<c><v>_<>lh<>		Line Height

<c><v>_<>vw<>		1% of Viewport Width

<c><v>_<>vh<>		1% of Viewport Height

<c><v>_<>vmax<>	1% of Viewport Largest Dimension

<c><v>_<>vmin<>	1% of Viewport Smallest Dimension



### Size - Comparison

1cm = 10mm = 25/64in = 38px

1in = 2.54cm = 96px

1pc = 1/6in = 16px

1pt = 1/72in = 1.333px

1px = 1/96in
@
@ cm, in, pc, pt, px



# Links / \<a href>
@
@ link-only, \<a>, href, a-only, a:, a


## Link - Basics

<table><col>Link<><col><c>a:link {<v>...<>}<><>
<col>Link, Visited<><col><c>a:visited {<v>...<>}<><>
<col>Link, Hover<><col><c>a:hover {<v>...<>}<><><col><#>When under mouse.<><>
<col>Link, Selected<><col><c>a:focus {<v>...<>}<><><col><#>When selected.<><>
<col>Link, Active<><col><c>a:active {<v>...<>}<><><col><#>When clicked.<><><>


Example:

<cb>a:link {
	text-decoration: none;
}<>

<cb>a:visited 
	text-decoration: none;
}<>

<cb>a:hover 
	text-decoration: underline;
}<>

<cb>a:active 
	text-decoration: underline;
}<>
@
@ clicked, :link, :visited: :hover, :focus, :active


## Link - Details


### Link - Basic

<cb>a:link {
	<v>...<>
}<>


Defines the style of a basic link.

This link must not have been visited, is not selected or under the mouse.
@
@ a:link, a link



### Link - Visited

<cb>a:visited {
	<v>...<>
}<>


Defines the style of a link that has been visited by the user.
@
@ a:visited, a visited



### Link - Hover

<cb>a:hover {
	<v>...<>
}<>


Sets the style when under the mouse pointer.
@
@ mouse over, under, pointer



### Link - Selected

<cb>a:focus {
	<v>...<>
}<>


Defines the style of a link that is currently in focus.
@
@ a:focus, a focus




### Link - Active

<cb>a:active {
	<v>...<>
}<>

Defines the style of a link that is being clicked or used.
@
@ a:active, a active



## Link Examples


### Link Example - Style Color, No Underline

Define a blue link without an underscore.

<cb>a:link {
	text-decoration: none;
	color: #<v>0055FF<>;
}

a:visited {
	text-decoration: none;
	color: #<v>0055FF<>;
}

a:hover {
	text-decoration: none;
	color: #<v>0043CC<>;
}

a:active {
	text-decoration: none;
	color: #<v>002A80<>;
}<>
@
@ style colored, colour, coloured



# Lists


### Lists - Ordered List - Style

<cb>list-style-type: <v>type<>;<>

<c><v>type<><>  <s>-<>  <c>decimal<>  <s>|<>  <c>decimal-leading-zero<>  <s>|<>
		<c>lower-alpha<>  <s>|<>  <c>upper-alpha<>  <s>|<>  <c>lower-greek<>  <s>|<>
		<c>lower-roman<>  <s>|<>  <c>upper-roman<>  <s>|<>  <c>none<>

	<c>decimal<>					1, 2, 3
	<c>decimal-leading-zero<>	0, 1, 2
	<c>lower-alpha<>				a, b, c
	<c>upper-alpha<>				A, B, C
	<c>lower-greek<>				⍺, β, δ
	<c>lower-roman<>				i, ii, iii
	<c>upper-roman<>				I, II, III
	<c>none<>				

Note: No <c>upper-greek<>
Note: <c><v>...-alpha<><> and <c><v>...-latin<><> are the same


Applies to <c>\<ol><> <c>\<li><> html tags.
@
@ ol, li, numbered, styling
@ none, decimal, decimal-leading-zero, lower-alpha, upper-alpha, lower-greek, lower-roman, upper-roman



### Lists - Unordered List - Style

<cb>list-style-type: <v>type<>;<>

<c><v>type<><>  <s>-<>  <c>disc<>  <s>|<>  <c>circle<>  <s>|<>  <c>square<>  <s>|<>  <c>none<>

	<c>disc<>		Bullet
	<c>circle<>		Circle
	<c>square<>		Square
	<c>none<>		No List Marker


Applies to <c>\<ul><> <c>\<li><> html tags.
@ ul, li, bulleted, styling, none



# Media
@
@ Responsive, Responsiveness, Break
@ media-only, \@media



### Media - By Color Scheme

<cb>@media (prefers-color-scheme: light) {
	<v>...<>
}<>

<cb>@media (prefers-color-scheme: dark) {
	<v>...<>
}<>

Sets the color scheme (light or dark) based on the OS settings.
@
@ colour, prefers-color-scheme, light, dark



### Media - By Size

<cb>@media (min-width: <v>units<>) {
	<v>...<>
}<>
@
@ min-width


#### Small Devices

<cb>@media (min-width: 576px) {
	<v>...<>
}<>

Landscape Phones
576px and Up

(Bootstrap Standard)



#### Medium Devices

<cb>@media (min-width: 768px) {
	<v>...<>
}<>

Tablets
768px and Up

(Bootstrap Standard)



#### Large Devices

<cb>@media (min-width: 992px) {
	<v>...<>
}<>

Desktops
992px and Up

(Bootstrap Standard)



#### Extra Large Devices

<cb>@media (min-width: 1200px) {
	<v>...<>
}<>

Large Desktops
1200px and Up

(Bootstrap Standard)



### Media - By Type

<cb>@media <v>media-type<> {
	<v>...<>
}<>

<cb>@media <v>media-type-1<>, <v>media-type-2<>, <v>...<> {
	<v>...<>
}<>


<c><v>media-type<><>  <s>-<>  <c>all<>  <s>|<>  <c>print<>  <s>|<>  <c>screen<>  <s>|<>  <c>speech<>


Example:

<cb>@media print {
	div.spacer {
		height: 10px; clear: both;
	}
}<>
@
@ all, print, screen, speech



# Position
@
@ absolute, position:
@ position-only, pos-only


## Relative Positions

Make the element absolute, then set the distance away from the border.

Example Top Right:

<cb>.top-right {
	position: absolute;
	top: 1em;
	right: 1em;
}<>
@
@ relative-only


### Position - Relative To Bottom

<cb>position: absolute;
bottom: <v>units-from-bottom<>;<>


Positions an element from the bottom.

The default is relative to the browser window.
@
@ bottom:



### Position - Relative To Left

<cb>position: absolute;
left: <v>units-from-left<>;<>


Position from left side in any unit.

The default is relative to the browser window.
@
@ left:



### Position - Relative To Right

<cb>position: absolute;
right: <v>units-from-right<>;<>


Position from right side in any unit.

The default is relative to the browser window.
@
@ right:



### Position - Relative To Top

<cb>position: absolute;
top: <v>units-from-top<>;<>


Positions an element from the top.

The default is relative to the browser window.
@
@ top:



### Position - Relative Center Horizontally

<cb>position: absolute;
left: 50%;
transform: translateX(-50%)<>



### Position - Relative Center Vertically

<cb>position: absolute;
left: 50%;
transform: translateX(-50%)<>


## Position Types

<cb>position:	[ static | absolute | fixed | relative ]<>


Defines the position type to be used to place elements.

The default is static.

Types

<card><table><col>Absolute<><col>Relative to first non static parent or to \<html> if none.<>
<col>Fixed<><col>Relative to browser window.<>
<col>Relative<><col>Relative to normal position.<>
<col>Static<><col>Normal flow<><><>



### Position Type - Relative to Parent

<cb>.<v>parent<> {
	position: relative;
}

.<v>child<> {
	position: absolute;
	<#>/* Dimensions go next. */<>
	<v>...<>
}<>
@
@ position: relative



# Flexbox
@
@ flex box, flex-only, flex-box-only, flexbox-only


## Summary

Link:
<l>https://css-tricks.com/snippets/css/a-guide-to-flexbox/<>



### Flex Container

The flexbox container that contains the items.

<cb>display: flex;<>

<cb>flex: <v>grow<> <v>shrink<> <v>basis<>;<>

	<c><v>grow<><>		0  <s>|<>  1		How much an item will grow relative to neighbours.
	<c><v>shrink<><>		0  <s>|<>  1		How much an item will shrink relative to neighbours.

	<c><v>basis<><>		auto  <s>|<>  inherit  <s>|<>  <v>value<>%
	<c><v>basis<><>		<v>value<>%  <s>|<>  <v>value<>px  <s>|<>  <v>value<>em


### Flex Items

The child items contained within the flexbox.



### Flex Size / flex-basis

<cb>flex-basis: 0;<>

<cb>flex-basis: 10px;<>

<cb>flex-basis: auto;<>

<!>Review from:
<l>https://developer.mozilla.org/en-US/docs/Web/CSS/flex-basis<>
@
@ flex-base, basis, base



### Main Axis

The main direction a flex control is stacked.

Row - Main Axis = Horizontal Stacking
Column - Main Axis = Vertical Stacking

Default: Row, Left to Right
@
@ main-axis



### Cross Axis
The cross direction or size of a flex control.

Row - Cross Axis = Vertical (Height)
Column - Cross Axis = Horizontal (Width)
@
@ cross-axis



## Flex Container


### Flex Container - Define

<cb>display: flex;<>
@
@ display flex, create, new



### Flex Container - Direction / flex-direction

<cb>flex-direction: <v>direction<>;<>


<c><v>direction<><>  <s>-<>  <c>row<>  <s>|<>  <c>row-reverse<>  <s>|<>  <c>column<>  <s>|<>  <c>column-reverse<>

<table><col><c>row<><><col>Horizontal - Left To Right<><col><#>(Default)<><>
<col><c>row-reverse<><><col>Horizontal - Right To Left<>
<col><c>column<><><col>Vertical - Top To Bottom<>
<col><c>column-reverse<>	<><col>Vertical - Bottom To Top <><>
@
@ flex-direction, column-reverse, row-reverse
@ top to bottom, left to right, vertical, horizortal, vertically, horizortally, set



### Flex Container - Wrap / flex-wrap

<cb>flex-wrap: <v>wrap-type<>;<>


<c><v>wrap-type<><>  <s>-<>  <c>wrap<>  <s>|<>  <c>wrap-reverse<>  <s>|<>  <c>nowrap<>

<table><col><c>wrap<><><col>Wrap Start to End<>
<col><c>wrap-reverse<><><col>Wrap End to Start<>
<col><c>nowrap<>			<><col>No Wrap<><col><#>(Default)<><><>


Causes the line to wrap when the line becames shorter than the minimum elements width.

<c>no-wrap<> forces items to remain on the same row / column.
They will overflow off the screen.
@
@ flex-wrap, wrap-reverse, no-wrap, nowrap
@ top to bottom, left to right, vertical, horizortal, reverse



### Flex Container - Flow / flex-flow

<cb>flex-flow: <v>direction<> <v>wrap-type<>;<>


Combines <c>flex-direction<> and <c>flex-wrap<> in one attribute.


<c><v>direction<><>  <s>-<>  <c>row<>  <s>|<>  <c>row-reverse<>  <s>|<>  <c>column<>  <s>|<>  <c>column-reverse<>

<table><col><c>row<><><col>Horizontal - Left To Right<><col><#>(Default)<><>
<col><c>row-reverse<><><col>Horizontal - Right To Left<>
<col><c>column<><><col>Vertical - Top To Bottom<>
<col><c>column-reverse<>	<><col>Vertical - Bottom To Top <><>

<c><v>wrap-type<><>  <s>-<>  <c>wrap<>  <s>|<>  <c>wrap-reverse<>  <s>|<>  <c>no-wrap<>

<table><col><c>wrap<><><col>Wrap Start to End<>
<col><c>wrap-reverse<><><col>Wrap End to Start<>
<col><c>no-wrap<>			<><col>No Wrap<><col><#>(Default)<><><>
@
@ flex-flow
@ direction, wrap, no wrap, reverse
@ row, row-reverse, column, column-reverse, wrap, wrap-reverse, no-wrap



### Flex Container - Align Along Main Axis / justify-content

<cb>justify-content: <v>justify-type<>;<>


<c><v>justify-type<><>  <s>-<>  <c>flex-start<>  <s>|<>  <c>flex-end<>  <s>|<>  <c>center<>  <s>|<>  <c>space-between<>  <s>|<>  <c>space-around<>

<table><col><c>flex-start<>		<><col>From Start<><col><#>(Default)<><>
<col><c>flex-end<><><col>From End, Working From Last Item To First<>
<col><c>center<><><col>Items Centered<>
<col><c>space-between<><><col>Space Items Evenly, Starting from Container Edges<>
<col><c>space-around<> <><col>Space Items Evenly, Spaces on Edge Side Too<><>


Align Items Along Main Axis

Defines how items are packed into a flex container along its main axis.
@
@ justify-content
@ Items, Alignment
@ flex-start, flex-end, center, space-between, space-around



### Flex Container - Align Along Cross Axis / align-items

<cb>align-items: <v>alignment<>;<>


<c><v>alignment<><>  <s>-<>  <c>stretch<>  <s>|<>  <c>flex-start<>  <s>|<>  <c>flex-end<>  <s>|<>  <c>center<>  <s>|<>  <c>baseline<>  <s>|<>  <c>space-around<>

<table><col><c>stretch<>			<><col>Fill 100% of Space<><col><#>(Default)<><>
<col><c>flex-start<><><col>Align Top of Cross Axis<>
<col><c>flex-end<><><col>Align Bottom of Cross Axis<>
<col><c>center<><><col>Center Items Across Cross Axis<>
<col><c>baseline<><><col>Match Item Baselines<>
<col> <>
<col><#>Others<><><col>There are a lot of other options here.<><>


Align Items Along Cross Axis

Defines how items are packed into a flex container along its main axis.
@
@ align-items
@ Items, Alignment
@ stretch, flex-start, flex-end, center, baseline



### Flex Container - Align Content Cross Axis / align-content

<cb>align-content: <v>alignment<>;<>


<c><v>alignment<><>  <s>-<>  <c>stretch<>  <s>|<>  <c>flex-start<>  <s>|<>  <c>flex-end<>  <s>|<>  <c>center<>  <s>|<>  <c>space-between<>  <s>|<>  <c>space-around<>

<table><col><c>stretch<>			<><col>Fill 100% of Space<><col><#>(Default)<><>
<col><c>flex-start<><><col>Pack Lines From Top of Cross Axis<>
<col><c>flex-end<><><col>Pack Lines From Bottom of Cross Axis<>
<col><c>center<><><col>Center Across Cross Axis<>
<col><c>space-between<><><col>Space Lines Evenly, Edge To Edge<>
<col><c>space-around<><><col>Space Lines Evenly, With Spacing Along Edges<>
<col> <>
<col><#>Others<><><col>There are a lot of other options here.<><>

Align items along the cross axis.



## Flex Items


### Flex Item - Align Self

<cb>align-self: <v>alignment<>;<>

<c><v>alignment<>  -  start <s>|<> center <s>|<> end <s>|<> stretch<>

<table><col><c>start<>			<><col>Start of Cross Axis<>
<col><c>center<><><col>Center in Cross Axis<>
<col><c>end<><><col>End of Cross Axis<>
<col> <>
<col><c>stretch<><><col>Fill Cross Axis<><><>


Aligns a flex item cross axis.



Example:

<cb>header {
	align-self: stretch
}<>
@
@ cross axis, alignment
@ start, end, center, stretch, fill
@ align-self



### Flex Item - Flex

<cb>flex: <v>grow_value<> <v>shrink_value<> <v>basis<><>


Combines flex-grow, flex-shrink, flex-basis into one property.


Example:

<cb>flex: 1 0 auto<>

Equivalent To:

<cb>flex-grow: 1
flex-shrink: 0
flex-basis: auto<>
@
@ grow, shrink, basis
@ flex:



### Flex Item - Flex Basis

<cb>flex-basis: <v>basis<>;<>

<c><v>basis<>  -  <v>length<> <s>|<> auto <s>|<> initial <s>|<> inherit<>

<table><col><v>length<>			<><col>A Unit of Length<>
<col> <>
<col><c>auto<><><col>The Length of the Flex Item<><col><#>Default<><>
<col><c>initial<><><col>Set to Default Value<>
<col><c>inherit<><><col>Inherit from the Parent<><><>


Defines the initial length of a flex item on the main axis.
@
@ main axis
@ auto, initial, inherit, length
@ flex-basis



### Flex Item - Grow

<cb>flex-grow: 1;<>

<cb>flex-grow: <v>value<>;<>


Expands to fill the available space along the main axis.

Expands to take as much main axis space as possible.
If more than one flex item has the same flex-grow value, they are spaced evenly.

For different values, the flex-grow value states the ratio one item grows in relation to the others.
An item with flex-grow of 4 will increase in size 4 pixels for every 1 pixel a flex-grow of 1 grows.

Default = 0
@
@ Expand, fill, increase, main axis



### Flex Item - Grow - Prevent

<cb>flex-grow: 0;<>

Setting a flex-grow value of 0 prevents the item from growing beyond it's natural size.
@
@ Expand, fill, stop, disable, don't, decrease, increase, main axis



### Flex Item - Shrink

<cb>flex-shrink: 1;<>

<cb>flex-shrink: <v>value<>;<>

Shrinks the item down when there is not enough space along the main axis.

The value determins how much the item will shrink in comparison to other items.
An item with flex-shrink of 4 will decrease in size 4 pixels for every 1 pixel a flex-shrink of 1 grows.

Default = 1
@
@ reduce, decrease, main axis



### Flex Item - Shrink - Prevent

<cb>flex-shrink: 0;<>

Setting the flex-shrink value to 0 prevents the item from reducing below it's natural size along the main axis.
@
@ reduce, don't, main axis



# Text
@
@ text-only


### Text - Alignment - Horizontal

<cb>text-align: [ left | right | center ];<>

Also aligns images.
@
@ text-align:
@ image, left, right, center, middle, text-align, horizontally



### Text - Alignment - Vertical

<cb>vertical-align: [ text-top | middle | text-bottom ];<>

Also aligns images.

<m>(add all tags. there are more)<>
@
@ vertical-align:
@ image, text-top, middle, text-bottom, center, vertical-align, vertically,



### Text - Alignment - Word Wrap

<cb>word-wrap: [ break-word ];<>
@
@ word-wrap:
@ image, word-wrap, break-word



### Text - Alignment - No Word Wrap

<cb>white-space: nowrap;<>

Works with headings too.
@
@ white-space:
@ white-space, nowrap



### Text - Set Content Character

<cb>content:	'\\<v>character_code<>';<>

Usage:

<cb>content:	'\\<v>FFFF<>';<>


Sets the element's content to the character for the given code.


Set To '>':

<cb>{
    content: '\\<v>003E<>';
}<>
@
@ characters, content, '\\', hex value, unicodeσ
@ content:



### Text - Indent

<cb>text-indent: <v>units<>;<>


Indent the first line of a paragraph.
@
@ text-indent, indentation
@ text-indent:



### Text - Line Height

<cb>line-height: <v>units<>;<>


Defines the height between lines of text.

1 = current line height.

Example:

<cb><v>.some_text<> {
	line-height: 1.5;
}
@
@ spacing, gap
@ line-height:



### Text - White Space

<cb>white-space: <v>type<>;<>

<table><col><c><v>type<><><><col><s>-<><><col><c>normal<>  <s>|<>  <c>nowrap<>  <s>|<>  <c>pre<>  <s>|<>  <c>pre-line<>  <s>|<>  <c>pre-wrap<>  <s>|<>  <c>initial<>  <s>|<>  <c>inherit<><><>

<card><table><col><c>normal<><><col>Collapse White Space To Single Space, Wrap Text When Necessary (Default)<>
<col><c>inherit<><><col>Inherit from Parent<>
<col><c>initial<><><col>Set to Default<>
<col><c>nowrap<><><col>Collapse White Space To Single Space, Don't Wrap Text<>
<col><c>pre<><><col>Preserve White Space (spaces, tabs, newlines) (Preformatting)<>
<col><c>pre-line<><><col>Collapse White Space To Single Space, Wrap Text When Necessary<>
<col><c>pre-wrap<><><col>Preserve White Space, Wrap When Necessary (Preformatting Wrap)<><><>
@
@ white-space:
@ normal, inherit, initial, nowrap, pre, pre-line, pre-wrap
@ wrap, tabs, new line, newline, whitespace, spaces



### Text - White Space - Preserve

<cb>white-space: pre;<>

<card><table><col><c>pre<>		<><col>Preserve White Space
(spaces, tabs, newlines) (Preformatting)<><><>
@
@ white-space:, pre
@ wrap, tabs, new line, newline, whitespace, spaces
@ preformatting, preserve



### Text - White Space - Preserve With Word-wrap

<cb>white-space: pre-wrap;<>

<card><table><col><c>pre-wrap<>	<><col>Preserve White Spase, Wrap When Necessary
(Preformatting Wrap)<><><>
@
@ white-space:, pre-wrap
@ wrap, tabs, new line, newline, whitespace, spaces
@ preformatting


# Text - Font
@
@ text-only
@ fonts, font-only, fonts-only



### Text - Color

<cb>color: <v>value<><>

<c><v>value<><>	-	"<v>color_name<>" | "#<v>RRGGBB<>" | "rgb(<v>red_number<>, green_number<>, <v>blue_number<>)";

Color Names:
<l>https://en.wikipedia.org/wiki/Web_colors<>
@
@ color:



### Text - Font

<cb>font-family: <v>font-name<>;<>
@
@ fixed with, monospaced
@ font-family:



### Text - Font - Serif

<cb>font-family: "Times New Roman", Times, serif;<>
@
@ font-family:



### Text - Font - San Serif

<cb>font-family: Helvetica, Calibri, sans-serif;<>

Bootstrap List:

<cb>font-family: system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", "Liberation Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"<>
@
@ font-family:



### Text - Font - Fixed Width / Monospace

<cb>font-family: monospace;<>

Bootstrap List:

<cb>font-family: SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;<>
@
@ Fixed With, monospace
@ font-family:



### Text - Font Size

<cb>font-size: <v>size<><>


1em = 12pt = 16px = 100%
@
@ font-size



### Text - Font Style

<cb>font-style: <v>style<>;<>

<c>style<>:

<cb><c>normal<> <s>|<> <c>italic<> <s>|<> <c>oblique<><>
@
@ styling
@ font-style:



### Text - Font Style / Text Decorator

<cb>text-decoration: <v>style<>;<>

<c>style<>:

<cb><c>none<> <s>|<> <c>underline<> <s>|<> <c>overline<> <s>|<> <c>line-through<><>
@
@ font, styling, decoration
@ text-decoration:
@ none, underline, overline, line-through



### Text - Font Style - Subscript

Prefer HTML:

<cb>\<sub><v>text<>\</sub><>

But if you must:

<cb>.<v>subscript<> {
	vertical-align: sub;
	font-size: 0.83em;
}<>

Using CSS will lose important sematic meaning from the content.
@
@ styling, vertical-align, sub
@ \<sub>



### Text - Font Style - Superscript

Prefer HTML:

<cb>\<sup><v>text<>\</sup><>

But if you must:

<cb>.<v>superscript<> {
	vertical-align: super;
	font-size: 0.83em;
}<>

Using CSS will lose important sematic meaning from the content.
@
@ styling
@ vertical-align, super
@ \<sup>



### Text - Font Weight / Bold

<cb>font-weight: <v>value<>;<>

<c>value<>:

<cb>normal <s>|<> bold <s>|<> lighter <s>|<> bolder <s>|<> 100 <s>|<> 200 <s>|<> 300 <s>|<> 400 <s>|<> 500 <s>|<> 600 <s>|<> 700 <s>|<> 800 <s>|<> 900<>

400 = normal
700 = bold
@
@ font-weight:
@ normal, bold, lighter, bolder
@ 100, 200, 300, 400, 500, 600, 700, 800, 900



### Text - Text Transform

<cb>text-transform: <v>style<>;<>

<c>style<>:

<cb><c>none<> <s>|<> <c>capitalize<> <s>|<> <c>lowercase<> <s>|<> <c>uppercase<> <s>|<> <c>full-size-kana<> <s>|<> <c>full-width<><>
@
@ styling, font-style
@ capitalize, uppercase, lowercase, none, full-width, full-size-kana
@ upper case, lower case, convert, string
@ text-transform:



# Visibility
@
@ hide, show, invisible



### Visibility - display

<cb>display: <v>value<><>

<cb>display: [ none | inline | block | inline-block ]<>

<table><col><c>none<><><col>Hides the element.
Also hides/removes the location and layout.<>
<col><c>block<><><col>Display as a block.<>
<col><c>inline<><><col>Display inline.<>
<col><c>inline-block<><><col>Display as an inline block.<><>
@
@ display:
@ block, inline, inline-block, none



### Visibility - visibility

<cb>visibility: <v>value<><>

<cb>visibility [ visible | hidden | collapse | inherit ]<>

<table><col><c>collapse<><><col> <>
<col><c>hidden<><><col>Makes an element invisible.
Keeps the location and layout.<>
<col><c>inherit<><><col> <>
<col><c>visible<><><col> <><>
@
@ visibility:
@ visible, hidden, collapse, inherit



# CSS Functions


### Size - Calculate

<cb>calc(<v>size-1<> + <v>size-2<> - <v>...<>)<>


Combines values togeher

Combines multiple units together to get the combined value.

Supports: +, -, *, /


Example:

<cb>.set_width {
	width: calc(var(--standard-width) + 10% + 1px - 2em);
}<>
@
@ combine, add, subtract, multiply, divide
@ +, -, *, /
@ calc()



# Element - Text Area
@
@ textarea


### Text Area - Resize - Hide

<cb>textarea {
	resize: none
}<>


Hides the resize indicator and disables resize on the text area.
@
@ disable, prevent



# How To


### Block / Div - Center Horizontally

<cb>.<v>center<> {
	margin: auto;
}<>


Horizontally centers a block inside it's container.


Center Inner Div:

<in-2>CSS:

<cb>div {
	border-radius: 5px;
	padding: 2em;
}

.<v>container<> {
	background-color: #888;
	width: 400px;
	height: 250px;
}

.<v>content<> {
	background-color: #444;
	width: 100px;
	height: 100px;
}

.<v>center-horizontally<> {
	margin: auto;
}<>

HTML:

<cb>\<div class="<v>container<>">
	\<div class="<v>content<> <v>center-horizontally<>">
	\</div>
\</div><><>
@
@ text, content, container, div



### Block / Div - Center Horizontally and Vertically

CSS:

<cb>.<v>container<> {
	display: flex;
	justify-content: center;
	align-items: center;
}<>

HTML:

<cb>\<div class="<v>container<>">
	\<div class="<v>content<>">
		<v>Content<>
	\</div>
\</div><>



Use Flexbox and a div embedded in a div to center horizontally and vertically.
@
@ text, content, container, div, flexbox



### Element - Position Above / Below

<cb>z-index: <v>position_index<><>


Sets the position of the element in relation to other page elements.

All elements are given a z-index value.
Higher values have precedence and are displayed on top of lower value elements.


Position Under:

<cb>z-index: -1<>


Position On Top:

<cb>z-index: 1000<>
@
@ display, lower, higher



### Input Box - Hide Border

<cb>input {
	border: none;
}<>



### SVG - Set Color

<cb>svg {
	fill: <v>color<>;
}<>


Or in the SVG file:

<cb>\<svg fill="currentColor"><v>...<><>

currentColor will use the current foreground color.
@
@ colour



### Text - Select - Disable

Use any of these…

-webkit-touch-callout: none;
-webkit-user-select: none;
-khtml-user-select: none;


<!>Don't Use:<>

-moz-user-select: none;			// Don't use
-ms-user-select: none;			// Don't use
user-select: none;				// Depricated



# Acronyms
@ 
@ Glossary, glossary-only
@ acronyms-only, acronym-only


### CSS
Cascading Style Sheets


### SASS
Syntactically Awesome Style Sheets


### SCSS
Sassy Cascading Style Sheets


# Terms
@
@ Glossary, glossary-only
@ terms-only, term-only


### Block Element
A page element that forces a new line to occur.
vs: Inline element


### Block Elements - All
<c>blockquote, div, dl, form, h1...h6, hr, ol, table, ul, li<>
Everything else is an inline element.


### Box
CSS treats everything as a box. The box has the following elements (outside to inside) Margin, Border, Padding, Content. Margin, Padding and Content are areas.


### Cascading
CSS property defined in outer tags cascade down into inner tags unless they are over ridden.


### Class
Identifies a group or class of similar elements.

css:

<cb>.<v>class-name<><>

<cb>.<v>class-name<> {<v>...<>}<>

html:

<cb>\<<v>...<> class="<v>class-name<>"><v>...<>\</<v>...<>><>



### ID
Identifies an individual element.

css:	

<cb>#<v>id-name<><>

<cb>#<v>id-name<> {<v>...<>}<>

html:

<cb>\<<v>...<> id="<v>id1<>"><v>...<>\</<v>...<>><>



### Inline Element
A page element that does not force a new line.

vs: Block Element



### Media Query Breakpoint

<!>Need a better definition here.<>

Defines a screen size or device that then dictates how the page should be layed out for that.



### Positioning
4 types - static, fixed, relative, absolute.


### Positioning - Absolute
Positions are relative to the first parent element that has a position other than static.
If there is no element, then the position is relative to the html block.


### Positioning - Fixed
Positions are relative to the browser window.
Fixed positions can overlap.


### Positioning - Relative
Positioned relative to its normal position.


### Positioning - Static
Default. Follows the normal flow of the page.
Not affected by: top, bottom, left, right properties.


### Pseudo-Class
A selector based on special information not contained in the document. Examples hover, first element



### Responsive Web Design

<!>Need a better definition and theory here.<>

Ingredients

	Media Queries
	Fluid Grids
	Flexible Images



### SASS
Syntactically Awesome Style Sheets

A css preprocessor that uses a haml like format (or indented syntax).
It can also process SCSS.
It supports functions, variables, nesting, mixins.



### SCSS
Sassy Cascading Style Sheets

A superset of CSS that compiles down to regular css.
It is supported by SASS.



### Selector
Declares what part of the markup a style is applied to.
Includes classes, ids, pseudo-classes and elements.


### Style
A group of tags and styling types to be applied to a particular html item


### Style Tag
A tag is defined in a css style block and it describes a type of styling to apply to a html element.
eg: background-color


